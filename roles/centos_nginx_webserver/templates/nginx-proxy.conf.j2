# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    server_tokens	off;
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    upstream idengine {
        server 127.0.0.1:8000;
    }

    upstream detector {
        server 127.0.0.1:8001;
    }

    # redirect all http to https
    server {
        listen 80 default_server;
        server_name _;
        return 301 https://$host$request_uri;
    }

    server {

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        listen              443 ssl;
        server_name  {{ centos_nginx_webserver_name }};
        ssl_certificate     /etc/letsencrypt/live/{{ centos_nginx_webserver_name }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{ centos_nginx_webserver_name }}/privkey.pem;

        location /detector/ {
            proxy_pass http://detector;
        }

        location / {
            root /var/www/{{ centos_nginx_webserver_name }}/html;
        }
    }

    server {
            listen              443 ssl;
            server_name  api.{{ centos_nginx_webserver_name }};
            location / {
                proxy_pass http://idengine;
            }
    }
}
